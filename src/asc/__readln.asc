# ASC implementation of readln()
# Calling convention:
#	- for ints and real, just push param as usual (i.e., param is the 
#	  address where the value read in is to be placed)
#	- for chars/strs, first param is the number of chars to read (e.g.,
#	  if we want to readln(s) where s : array[1..10] of char, then the first
#	  param should be 10 and readln() will assume -13[0] is the address
#	  into which to return the first char read (e.g., s[1])
# NOTE: check err flag after reading from input, if it does not get the type
# it is expecting then it is a run time error and the program will halt.

__readln_str		ADJUST 1	# make # of chars to read a local var
			PUSH -3[0]	
			POP 0[0]
			GOTO __readln_str_loop

__readln_str_loop	PUSH 0[0]	# top of stack <-- # char left to read
			IFZ __readln_str_done
			# else we have more chars to read
			PUSH -4[0]
			READC		# get char from stdin
			IFERR __readln_str_err 
			DUP		# push extra copy of read in char onto
					# stack as we need to test it for
					# equality with newline
			CONSTI 10	# ascii val of newline char
			EQI		# see read in char == newline
			IFNZ __readln_str_nl_done
			POPI 		# store read char at &x

			# decrement # of chars left to print
			PUSH 0[0]
			CONSTI -1
			ADDI
			POP 0[0]

			# increment &x
			PUSH -4[0]
			CONSTI 1
			ADDI
			POP -4[0]
			GOTO __readln_str_loop

__readln_str_nl_done	# stopped reading because we caugh a newline, so
			# we have two extra values on stack we need to kick off
			ADJUST -2
			GOTO __readln_str_done

__readln_str_done	ADJUST -1
			CONSTI 10
			WRITEC
			RET 0

__readln_str_err	CONSTI 90	# TODO: print real error message
			WRITEC
			STOP

__readln_int		PUSH -3[0]	# push &x onto stack
			READI		# read int from stdin
			IFERR __readln_int_err
			POPI		# pop value read from stdin to
					# address specified by param
			READC		# consume newline
			WRITEC
			RET 0		
			

__readln_int_err	# TODO: produce error message
			CONSTI 90
			WRITEI
			STOP

__readln_real		PUSH -2[0]	# push &x onto stack
			READR		# read real from stdin
			IFERR __readln_real_err
			POPI		# pop value read from stdin to addr
					# specified by param
			READC		# consume newline
			WRITEC
			RET 0		

__readln_real_err	STOP 		# TODO print error



