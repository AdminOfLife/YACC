# ASC implementation of write().
# HOW TO CALL:
#	-> For ints/reals, simply push param as usual and call.
#	-> For chrs/string, push number of chars to print as first param
#	    (i.e., at -3[0]), we then print the last param first (so 
#	    just throw everything onto the stack in the order you get it,
#	    then push number of params to print and then call write)
__write_str		ADJUST 1	# make number of args a local param
			PUSH -3[0]
			POP 0[0]
			GOTO __write_str_loop
__write_str_loop	PUSH 0[0]	# top of stack <-- # left to print
			IFZ __write_str_end	# nothing more to print, exit
			# else we have a char to write
			# start by calculating depth of 0[0]th param
			PUSH 0[0]
			CONSTI -1
			MULI		
			CONSTI -3
			ADDI
			PUSHI 0		# push next char onto stack
			WRITEC		# write the character
			# decrement # of args
			PUSH 0[0]
			CONSTI -1
			ADDI
			POP 0[0]
			GOTO __write_str_loop
__write_str_end		ADJUST -1	# kick local vars off the stack
			RET 0

__write_int		PUSH -3[0]
			WRITEI
			RET 0

__write_real		PUSH -3[0]
			WRITER
			RET 0


