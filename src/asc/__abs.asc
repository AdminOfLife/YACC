# ASC code for the predefined function abs(x)
# Works as follows: if x < 0, return x * (-1), else return x. 
# TODO: will this have to be split into __abs_int and __abs_real?  Or does
# the implementation below work?  Will have to confirm at tes time.

__abs:		PUSH -3[0]		# push x onto stack
		ITOR			# convert it to a real (in case
					# it was an integer, don't want to do it
					# the other way around as we might
					# lose precision to truncation)
		CONSTI 0		# push 0 onto stack
		LTR			# if x < 0, push 1, else push 0
		IFZ __abs_postive
		PUSH -3[0]		# x < 0, push it onto stack
		ITOR			# x -> real(x)
		CONSTR -1.0		# push -1 onto stack
		MULR			# top of stack <-- x * (-1)
		POP -[0]		# place x in ret value location in stack
		GOTO __abs_ret

__abs_postive:	PUSH -3[0]		# x is positive, push it onto stack
		POP -4[0]		# place x in ret value location in stack
		GOTO __abs_ret
__abs_ret:	RET 0
