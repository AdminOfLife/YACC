################################################################################
# __do_str_lt_op()
# You know the drill.
# Parameters
#		-3[0] n : the size of the strings to be compared
#		-4[0] y : the RHS operand
#		-5[0] x : the LHS operand
################################################################################

__do_str_lt_op
			# nothing to set up

__do_str_lt_loop
			PUSH -3[0]	# push n onto the stack
			IFZ __do_str_lt_false
			
			# push *y
			PUSH -4[0]
			PUSHI

			# push *x
			PUSH -5[0]
			PUSHI

			# test *x < *y, if yes, we return true
			LTI
			IFNZ __do_str_lt_true

			# push *y
			PUSH -4[0]
			PUSHI

			# push *x
			PUSH -5[0]
			PUSHI

			# test *x == *y, if yes we set up next iteration
			EQI
			IFNZ __do_str_lt_cont

			# else it must be that *x > *y, so we return false
			GOTO __do_str_lt_false


__do_str_lt_cont
			# set up next iteration
			# increment &y
			PUSH -4[0]
			CONSTI 1
			ADDI
			POP -4[0]
		
			# increment &x
			PUSH -5[0]
			CONSTI 1
			ADDI
			POP -5[0]

			# decrement n
			PUSH -3[0]
			CONSTI -1
			ADDI POP -3[0]
			GOTO __do_str_lt_loop	


__do_str_lt_true
			CONSTI 1
			POP -5[0]
			GOTO __do_str_let_ret

__do_str_lt_false
			CONSTI 0
			POP -5[0]
__do_str_lt_ret
			RET 0	


