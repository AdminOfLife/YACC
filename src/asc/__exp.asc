__exp_int		PUSH -3[0]
			ITOR
			POP -3[0]
			GOTO __exp_real

__exp_real		CONSTI 0
			PUSH -3[0]
			CALL 0, __is_bad_real
			ADJUST -1
			IFNZ __exp_err

			ADJUST 4	# make room for k, k!, x^k, and sum
					# so far
			CONSTI 35	# we can only calculate up to 35
					# summands as 36! is not representable
					# in ASC (it is too large)
			POP 0[0]
			CONSTR 0.0
			POP 3[0]
			GOTO __exp_loop


__exp_loop		PUSH 0[0]
			CONSTI -1
			ADDI
			POP 0[0]
			PUSH 0[0]
			CONSTI 0
			LTI
			IFNZ __exp_done
			
			# calculate k!
			CONSTI 0
			PUSH 0[0]
			CALL 0, __factorial
			ADJUST -1
			POP 1[0]

			# calculate x^k
			CONSTI 0
			PUSH 0[0]
			PUSH -3[0]
			CALL 0, __pow_real_int
			ADJUST -2
			POP 2[0]

			# calculate next summand
			PUSH 2[0]
			PUSH 1[0]
			DIVR
			PUSH 3[0]
			ADDR
			POP 3[0]
			GOTO __exp_loop
			

__exp_err		# print error message
			STOP

__exp_done		PUSH 3[0]
			POP -4[0]
			ADJUST -4
			RET 0


