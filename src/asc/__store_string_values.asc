################################################################################
# __store_string_values() :
# Given an address which points to a contiguous chunk of heap memory of the
# the appropriate size, __store_string_value() stores the values which are 
# currently on the stack to the heap memory chunk.
# Parameters
#		-3[0] : n, the number of values to be stored
#		-4[0] through -(n+4)[0] : the values to be stored on the heap
#		    with the first value highest on the stack.
#		-(n+5)[0] : the base address of the contiguous heap section
################################################################################

			GOTO test_start

__store_string_values
			ADJUST 1	# make num of values written to store a 
					# local param, hereby called x
			CONSTI 0	# and initialize it to zero
			POP 0[0]

			# now we get the address and make it a local param
			ADJUST 1
			PUSH -3[0]	# push n onto the stack
			CONSTI -1
			MULI		# top of stack <-- -n
			CONSTI -4	# adjust for other params
			ADDI
			PUSHI 0		# push the address onto the stack
			POP 1[0]	# and save it for later use

__store_loop
			PUSH 0[0] 	# push x onto stack
			PUSH -3[0]	# push n onto stack
			EQI		# determine if x == n
			IFNZ __store_done
		
			# else, we have more values to print
			# push next address onto stack
			PUSH 1[0]

			# calculate depth of xth parameter
			PUSH 0[0]
			CONSTI -1
			MULI
			CONSTI -4
			ADDI

			# push xth char onto the stack
			PUSHI 0

			# pop it off to the heap
			POPI

			# set up next iteration
			# increment x
			PUSH 0[0]
			CONSTI 1
			ADDI
			POP 0[0]

			# decrement address
			PUSH 1[0]
			CONSTI -1
			ADDI
			POP 1[0]

			# do next iteration
			GOTO __store_loop	

__store_done			
			# kick off local params
			ADJUST -2
			RET 0
test_start
			ALLOC 1
			DUP
			CONSTI 64
			CONSTI 63
			CONSTI 2
			CALL 0, __store_string_values
			ADJUST -3
			PUSHI
			WRITEC
			!D
			CONSTI -1
			ADDI
			PUSHI
			STOP 




