# Blobbing the harder arithmetic functions together because they require
# the same helper functions.  This will be separated once the test runner
# is working properly.


# Helper function: takes int x as first param, int n as second, returns x^n

__pow_int_int		PUSH -4[0]	# push n onto stack
			IFZ __pow_zeroexp	# n = 0, return 1
			PUSH -3[0]	# push x onto stack
			IFZ __pow_zerobase
			



__pow_zeroexp	CONSTR 1.0	# push 1.0 onto stack
			POP -5[0]	# place 1.0 in ret val location in stack
			GOTO __pow_ret

__pow_zerobase	CONSTR 0.0	# push 0.0 onto stack
			POP -5[0]	# place 0.0 in ret val location in stack
			GOTO __pow_ret

__pow_ret	RET 0
