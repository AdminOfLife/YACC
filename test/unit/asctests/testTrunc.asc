		GOTO test_start
__is_bad_real	PUSH -3[0]
		RTOI
		CONSTI 2146435072	# push nan onto stack
		RTOI
		EQI
		IFNZ __is_bad_real_true
		PUSH -3[0]
		RTOI
		CONSTI 2139095040	# push +inf onto stack
		RTOI
		EQI
		IFNZ __is_bad_real_true
		PUSH -3[0]
		RTOI
		CONSTI -8388608		# push -inf onto stack
		RTOI
		EQI
		IFNZ __is_bad_real_true
		CONSTI 0
		POP -4[0]
		GOTO __is_bad_real_ret

__is_bad_real_true	CONSTI 1
			POP -4[0]
			GOTO __is_bad_real_ret

__is_bad_real_ret	RET 0
# Asc implementation of trunc()
# From the expression x that shall be of real-type, this function shall return
# a result of integerType.  The value of trunc(x) shall be such that if x is
# positive or zero, then 0 < x-trunc(x) < 1; otherwise -1 < x- trunc(x) < 0.
# It shall be an error if such a value does not exist.
# TODO: when can an error occur?
# NOTE: super easy, ROTI does trunc() for us.
__trunc		CONSTI 0	# make room for call to __is_bad_real
		PUSH -3[0]
		CALL 0, __is_bad_real
		ADJUST -1
		IFNZ __trunc_err
		PUSH -3[0]		
		RTOI
		POP -4[0]
		RET 0

__trunc_err	# oh no
		STOP

test_start	CONSTI 0
		CONSTI 0
		CONSTI 2146435073
		CALL 0, __trunc
		ADJUST -1
		WRITEI
		CONSTI 10
		WRITEC
		STOP
