# ASC implementation of char() function.
# From the expression x that shall be of integer-type, this function shall
# return a result of chartype that shall be the value whose
# oridnal number is equal to the value of the expression x, if such a character
# value exists.  It shall be an error if such a character value does not
# exist.
# It shall be true that chr(ord(ch)) = ch
			GOTO test_start
__chr			PUSH -3[0]	# push ch onto stack
			CONSTI 48	# push ascii val of '0' onto stack
			LTI
			IFNZ __chr_err	# ch < 48 => not a char value
			PUSH -3[0]
			CONSTI 57	# push ascii val of '9'onto stack
			GTI
			IFNZ __chr_AZ	# if ch > 58, not 0-9, try A-Z next
			GOTO __chr_done	# else ch is 0 - 9, we're done

__chr_AZ		PUSH -3[0]
			CONSTI 66	# push ascii val of 'A' onto stack
			LTI
			IFNZ __chr_err	# ch not a char
			PUSH -3[0]
			CONSTI 90	# push ascii val of 'Z' onto stack
			GTI
			IFNZ __chr_az	# if ch > 'Z', then try a-z
			GOTO __chr_done	# else, ch is A - Z

__chr_az		PUSH -3[0]
			CONSTI 97	# push ascii val of 'a' onto the stack
			LTI
			IFNZ __chr_err	# chr > Z but < a => not a char
			PUSH -3[0]
			CONSTI 122	# push ascii val of 'z' onto the stack
			GTI
			IFNZ __chr_err	# ch > 'z', out of chancess, not a char
			GOTO __chr_done	

__chr_done		PUSH -3[0]
			POP -4[0]	# return ch since we're using ascii
			RET 0

__chr_err		# PRINT ERROR MESSAGE
			STOP

test_start		ADJUST 1
			CONSTI 0
			CONSTI 0
			CONSTI 90	# test with ch = Z
			call 0, __chr
			ADJUST -1
			WRITEC
			CONSTI 10
			WRITEC
			STOP
